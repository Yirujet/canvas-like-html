<canvas width="1000" height="500">
    <button x="10" y="10" @click="(a, b) => { console.log(this) }">默认按钮</button>
    <button x="130" y="10" type="primary" @click="handleClick">主要按钮</button>
    <button x="250" y="10" type="success" @click="handleChangeRadioText">成功按钮</button>
    <button x="370" y="10" type="info">信息按钮</button>
    <button x="490" y="10" type="warning">警告按钮</button>
    <button x="610" y="10" type="danger">危险按钮</button>
    <button x="10" y="60" plain>朴素按钮</button>
    <button x="130" y="60" type="primary" plain>主要按钮</button>
    <button x="250" y="60" type="success" plain>成功按钮</button>
    <button x="370" y="60" type="info" plain>信息按钮</button>
    <button x="490" y="60" type="warning" plain>警告按钮</button>
    <button x="610" y="60" type="danger" plain>危险按钮</button>
    <button x="10" y="110" round>圆角按钮</button>
    <button x="130" y="110" type="primary" round>主要按钮</button>
    <button x="250" y="110" type="success" round>成功按钮</button>
    <button x="370" y="110" type="info" round>信息按钮</button>
    <button x="490" y="110" type="warning" round>警告按钮</button>
    <button x="610" y="110" type="danger" round>危险按钮</button>
    <button x="10" y="160" disabled>禁用按钮</button>
    <button x="130" y="160" type="primary" disabled>主要按钮</button>
    <button x="250" y="160" type="success" disabled>成功按钮</button>
    <button x="370" y="160" type="info" disabled>信息按钮</button>
    <button x="490" y="160" type="warning" disabled>警告按钮</button>
    <button x="610" y="160" type="danger" disabled>危险按钮</button>
    <dropdown 
        x="10" 
        y="220" 
        :list="list1"
    >下拉菜单</dropdown>
    <dropdown 
        x="10" 
        y="250" 
        :list="[
            { name: 'dropdown-item-1', value: 'dropdown-item-1' },
            { name: 'dropdown-item-2', value: 'dropdown-item-2' }
        ]"
        trigger="click"
        @command="handleCommand"
    >下拉菜单-点击触发</dropdown>
    <radio-group x="10" y="280" @change="handleRadioGroupChange">
        <radio value="备选项1">备选项1</radio>
        <radio value="备选项2">备选项2</radio>
        <radio value="备选项3">备选项3</radio>
    </radio-group>
    <checkbox x="10" y="310">custom-checkbox</checkbox>
    <checkbox-group x="10" y="340" @change="handleCheckboxGroupChange">
        <checkbox value="value1">复选框1</checkbox>
        <checkbox value="value2">复选框2</checkbox>
    </checkbox-group>
    <link x="10" y="370" :underline="false" type="warning" href="https://www.baidu.com/" :text="text"></link>
    <link x="130" y="370">默认链接</link>
    <link x="200" y="370" type="primary">主要链接</link>
    <link x="270" y="370" type="success">成功链接</link>
    <link x="340" y="370" type="warning">警告链接</link>
    <link x="410" y="370" type="danger">危险链接</link>
    <link x="480" y="370" type="info">信息链接</link>
    <radio x="10" y="400" :text="obj.innerObj.name"></radio>
    <span x="10" y="430" :text="test.a.0.b"></span>
    <input x="10" y="460" value="test" @input="handleInput"></input>
    <!--<table :width="1000" :height="500" :data="tblData" :columns="columns"></table>-->
</canvas>
<script>
import axios from 'axios'

{
    data: {
        list1: [{ name: 'dropdown-item-1', value: 'dropdown-item-1' }],
        text: 'changed after 2s',
        obj: {
            innerObj: {
                name: 'test'
            }
        },
        test: {
            a: [
                {
                    b: '123'
                }
            ]
        },
        tblData: [],
        columns: []
    },
    methods: {
        handleClick() {
            this.list1.value.push({ name: 'dropdown-item-3', value: 'dropdown-item-3' })
            console.log(this)
        },
        async handleCommand(val) {
            const res = await axios.get('https://api.uomg.com/api/comments.163?format=json')
            console.log(res.data.data.name)
        },
        handleCheckboxGroupChange: (val) => {
            console.log(`checkbox-group changed: ${val}`)
        },
        handleRadioGroupChange(val) {
            console.log(`radio-group changed: ${val}`)
        },
        handleChangeRadioText() {
            this.obj.value.innerObj.name = 'Oops,amazing'
        },
        handleInput(val) {
            console.log(val)
        }
    },
    created() {
    },
    mounted() {
        setTimeout(() => {
            this.text.value = 'happy yirujet'
            this.test.value.a[0].b = 321
        }, 2000)
        /*const colLen = 100
        const rowLen = 1000
        const fixedColIndex = []

        const head = Array.from({ length: colLen }).map((e, i) => ({
            field: `col${i}`,
            label: `col${i + 1}`,
            fixed: ((i) => {
                if (fixedColIndex.includes(i)) {
                    return 'right'
                }
            })(i),
        }))
        head.unshift({ field: 'index', label: '序号', fixed: 'left', width: 65 })
        head.unshift({
            type: 'checkbox',
            fixed: 'left',
            width: 35
        })
        head.unshift({ 
            label: 'col-parent', 
            children: [
                { 
                    label: 'col-1', 
                    children: [
                        {
                            label: 'col-1-1',
                            field: 'col1',
                            children: [
                                {
                                    label: 'col-1-1-1',
                                    field: 'col3',
                                    children: [
                                        {
                                            label: 'col-1-1-1-1',
                                            field: 'col4'
                                        },
                                        {
                                            label: 'col-1-1-1-2',
                                            field: 'col3'
                                        }
                                    ]
                                },
                                {
                                    label: 'col-1-1-2',
                                    field: 'col4',
                                    children: [
                                        {
                                            label: 'col-1-1-2-1',
                                            field: 'col5',
                                        },
                                        {
                                            label: 'col-1-1-2-2',
                                            field: 'col6',
                                        },
                                        {
                                            label: 'col-1-1-2-3',
                                            field: 'col7',
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            label: 'col-1-2',
                            field: 'col2',
                            children: [
                                {
                                    label: 'col-1-2-1',
                                    field: 'col11',
                                },
                                {
                                    label: 'col-1-2-2',
                                    field: 'col12',
                                }
                            ]
                        }
                    ]
                },
                { label: 'col-2', field: 'col9' }
            ]
        })
        head.push({
            field: 'operation',
            label: '操作',
            fixed: 'right',
            width: 250,
            slot: {
                head: (h, col) => {
                    return h('span', {
                        text: `${col.label}`
                    })
                },
                body: (h, scope) => {
                    return [
                        h('button', {
                            // type: 'success',
                            type: 'text',
                            text: '查看',
                            on: {
                                click() {
                                    alert(`查看第${scope.$index + 1}行`)
                                }
                            }
                        }),
                        h('link', {
                            type: 'primary',
                            text: '编辑',
                            on: {
                                click() {
                                    alert(`编辑第${scope.$index + 1}行`)
                                }
                            }
                        }),
                        h('link', {
                            type: 'danger',
                            text: '删除',
                            disabled: true,
                            on: {
                                click() {
                                    alert(`删除第${scope.$index + 1}行`)
                                }
                            }
                        }),
                        h('dropdown', {
                            text: '更多',
                            trigger: 'click',
                            list: [
                                { name: `btn${scope.$index + 1}`, value: `btn${scope.$index + 1}` },
                            ],
                            on: {
                                command: (val) => {
                                    alert(`点击了第${scope.$index + 1}行-${val}`)
                                }
                            }
                        })
                    ]
                }
            }
        })

        let list = []

        for (let i = 0, l = rowLen, row = {}; i < l; i++) {
            row = {}
            for(let j = 0, k = head.length; j < k; j++) {
                row.index = i + 1
                row[`col${j}`] = `row-${i + 1}-col${j + 1}`
            }
            list.push(row)
        }

        const data = list
        this.columns.value = head;
        this.tblData.value = list;*/
    }
}
</script>