<canvas width="1000" height="500">
    <!--<row align="middle" justify="space-evenly">
        <col :span="colItem.span" *for="(colItem, index) in colList">
            <span :text="index + obj.innerObj.name"></span>
            <span 
                *for="(tagItem, tagIndex) in colItem.tagList" 
            >{{ "test " + index + tagIndex }}</span>
            <tag 
                *for="(tagItem, tagIndex) in colItem.tagList" 
                @change="handleTagClick(tagItem, colItem, 'aaa')"
            >{{ tagItem + index + tagIndex }}</tag>
        </col>
        <col span="6">
            <dropdown 
                x="10" 
                y="250" 
                :list="[
                    { name: 'dropdown-item-1', value: 'dropdown-item-1' },
                    { name: 'dropdown-item-2', value: 'dropdown-item-2' }
                ]"
                trigger="click"
                @command="handleCommand"
            >下拉菜单-点击触发</dropdown>
            <progress
                type="dashboard"
                :percentage="percentage" 
                :textInside="true" 
                status="success"
                :width="100"
                strokeWidth="5"
                strokeLinecap="round"
            ></progress>
        </col>
    </row>
    <row>
		<col :span="24">
			<row>
				<col :span="6" :push="2"><span>col-6 push-2</span></col>
				<col :span="6" :push="3"><span>col-6 push-3</span></col>
			</row>
			<row justify="end">
				<col :span="4" :push="2"><span>col-4 push-2</span></col>
				<col :span="6" :push="2"><span>col-6 push-2</span></col>
			</row>
			<row>
				<col :span="18" :push="6"><span>col-18 push-6</span></col>
				<col :span="6" :pull="18"><span>col-6 pull-18</span></col>
			</row>
		</col>
	</row>
    <button x="20" y="50" :text="text"></button>-->
    <table :width="800" :height="500" :data="tblData" :columns="columns"></table>
</canvas>
<script>
import { data as tblData, head as tblHead } from './mock.js'

export default {
    data: {
        list1: [{ name: 'dropdown-item-1', value: 'dropdown-item-1' }],
        text: 'changed after 2s',
        obj: {
            innerObj: {
                name: 'test'
            }
        },
        test: {
            a: [
                {
                    b: '123'
                }
            ]
        },
        tblData: [],
        columns: [],
        colors: [
          {color: '#f56c6c', percentage: 20},
          {color: '#e6a23c', percentage: 40},
          {color: '#5cb87a', percentage: 60},
          {color: '#1989fa', percentage: 80},
          {color: '#6f7ad3', percentage: 100}
        ],
        strokeWidth: 12,
        percentage: 66,
        tagList: ['tag-1', 'tag-2', 'tag-3'],
        colList: [
            {
                span: 3,
                tagList: ['tag1-1', 'tag1-2', 'tag1-3']
            },
            {
                span: 4,
                tagList: ['tag2-1', 'tag2-2']
            },
        ],
    },
    methods: {
        handleClick() {
            //this.list1.value.push({ name: 'dropdown-item-3', value: 'dropdown-item-3' })
            console.log(this, tblData)
        },
        async handleCommand(val) {
            const res = await axios.get('https://api.uomg.com/api/comments.163?format=json')
            console.log(res.data.data.name)
        },
        handleCheckboxGroupChange: (val) => {
            console.log(`checkbox-group changed: ${val}`)
        },
        handleRadioGroupChange(val) {
            console.log(`radio-group changed: ${val}`)
        },
        handleChangeRadioText() {
            this.obj.value.innerObj.name = 'Oops,amazing'
        },
        handleInput(val) {
            console.log(val)
        },
        handleTagClick(colItem, tagItem, a) {
            console.log(tagItem, colItem, a)
        },
        handleTagClose() {
            console.log('tag closed')
        }
    },
    created() {
    },
    mounted() {
        /*setTimeout(() => {
            this.text.value = 'happy yirujet'
            this.test.value.a[0].b = 321
        }, 2000)
        setTimeout(() => {
            let percentVal = Math.floor(100 * Math.random())
            this.obj.value.innerObj.name = percentVal
            this.percentage.value = percentVal
        }, 2000)
        setTimeout(() => {
            this.colList.value.push({
                span: 2,
                tagList: ['tag3-1']
            })
            console.log(this)
            this.colList.value[1].tagList.push('tag2-3')
        }, 2000)
        setTimeout(() => {
            this.text.value = 'happy yirujet'
        }, 2000)*/
        this.columns.value = tblHead;
        this.tblData.value = tblData;
    }
}
</script>