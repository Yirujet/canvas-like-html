<canvas width="1000" height="500">
    <!--
    <button x="10" y="10" @click="(a, b) => { console.log(this) }">默认按钮</button>
    <button x="130" y="10" type="primary" @click="handleClick">主要按钮</button>
    <button x="250" y="10" type="success" @click="handleChangeRadioText">成功按钮</button>
    <button x="370" y="10" type="info">信息按钮</button>
    <button x="490" y="10" type="warning">警告按钮</button>
    <button x="610" y="10" type="danger">危险按钮</button>
    <button x="10" y="60" plain>朴素按钮</button>
    <button x="130" y="60" type="primary" plain>主要按钮</button>
    <button x="250" y="60" type="success" plain>成功按钮</button>
    <button x="370" y="60" type="info" plain>信息按钮</button>
    <button x="490" y="60" type="warning" plain>警告按钮</button>
    <button x="610" y="60" type="danger" plain>危险按钮</button>
    <button x="10" y="110" round>圆角按钮</button>
    <button x="130" y="110" type="primary" round>主要按钮</button>
    <button x="250" y="110" type="success" round>成功按钮</button>
    <button x="370" y="110" type="info" round>信息按钮</button>
    <button x="490" y="110" type="warning" round>警告按钮</button>
    <button x="610" y="110" type="danger" round>危险按钮</button>
    <button x="10" y="160" disabled>禁用按钮</button>
    <button x="130" y="160" type="primary" disabled>主要按钮</button>
    <button x="250" y="160" type="success" disabled>成功按钮</button>
    <button x="370" y="160" type="info" disabled>信息按钮</button>
    <button x="490" y="160" type="warning" disabled>警告按钮</button>
    <button x="610" y="160" type="danger" disabled>危险按钮</button>
    <dropdown 
        x="10" 
        y="220" 
        :list="list1"
    >下拉菜单</dropdown>
    <dropdown 
        x="10" 
        y="250" 
        :list="[
            { name: 'dropdown-item-1', value: 'dropdown-item-1' },
            { name: 'dropdown-item-2', value: 'dropdown-item-2' }
        ]"
        trigger="click"
        @command="handleCommand"
    >下拉菜单-点击触发</dropdown>
    <radio-group x="10" y="280" @change="handleRadioGroupChange">
        <radio value="备选项1">备选项1</radio>
        <radio value="备选项2">备选项2</radio>
        <radio value="备选项3">备选项3</radio>
    </radio-group>
    <checkbox x="10" y="310">custom-checkbox</checkbox>

    <link x="10" y="370" :underline="false" type="warning" href="https://www.baidu.com/" :text="text"></link>
    <link x="130" y="370">默认链接</link>
    <link x="200" y="370" type="primary">主要链接</link>
    <link x="270" y="370" type="success">成功链接</link>
    <link x="340" y="370" type="warning">警告链接</link>
    <link x="410" y="370" type="danger">危险链接</link>
    <link x="480" y="370" type="info">信息链接</link>
    <radio x="10" y="400" :text="obj.innerObj.name"></radio>
    <input x="10" y="460" value="test" clearable disabled @input="handleInput"></input>
    <switch x="10" y="520" inactiveText="按年付费" activeText="按月付费"></switch>
    <checkbox-group x="10" y="340" @change="handleCheckboxGroupChange">
        <checkbox value="value1">复选框1</checkbox>
        <checkbox value="value2">复选框2</checkbox>
    </checkbox-group>
    -->
    <row align="middle" justify="space-between">
        <!--<col span="2">
            <button>按钮1</button>
            <button disabled>按钮2</button>
            <button>按钮3</button>
        </col>
        <col span="4">
            <rate 
                value="3.5" 
                allowHalf 
                allowClear
                :tooltips="[1, 2, 3, 4, 5]"
            ></rate>
        </col>-->
        <col span="20" offset="2">
            <!--<span>aaa</span>
            <link>bbb</link>
            <row justify="center">
                <col span="6">
                    <button type="primary" round @click="handleClick">主要按钮</button>
                    <switch inactiveText="按年付费" activeText="按月付费"></switch>
                </col>
            </row>
            <row align="bottom">
                <col span="6" push="18"><span>span-12</span></col>
                <col span="18" pull="6">
                    <button type="primary" plain>按钮</button>
                    <tag type="warning">tag 1</tag>
                    <tag type="danger">tag 2</tag>
                </col>
            </row>-->
            <row align="middle" justify="space-evenly">
                <!--<col span="4"><tag closable>span-4</tag></col>
                <col span="4"><tag closable type="success" @change="handleTagClick" @close="handleTagClose">span-4</tag></col>
                <col span="4"><tag closable type="info">span-4</tag></col>
                <col span="12">
                    <tag *for="(item, index) in tagList">{{item}}</tag>
                </col>-->
                <col :span="colItem.span" *for="(colItem, index) in colList">
                    <tag *for="tagItem in colItem.tagList">{{ tagItem + index }}</tag>
                </col>
                <col span="6">
                    <span x="10" y="430" :text="test.a.0.b + obj.innerObj.name"></span>
                    <progress
                        type="dashboard"
                        :percentage="percentage" 
                        :textInside="true" 
                        status="success"
                        :width="100"
                        strokeWidth="5"
                        strokeLinecap="round"
                    ></progress>
                </col>
            </row>
        </col>
        <!--<col span="8">
            <row>
                <col>
                    <progress
                        type="circle"
                        :percentage="percentage" 
                        :textInside="false" 
                        :color="colors" 
                        :width="80"
                        :strokeWidth="strokeWidth"
                        strokeLinecap="butt"
                    ></progress>
                    <progress
                        :percentage="percentage" 
                        :textInside="false" 
                        :width="200"
                        strokeWidth="20"
                        strokeLinecap="square"
                    ></progress>
                </col>
            </row>
        </col>-->
    </row>
    <!--<table :width="1000" :height="500" :data="tblData" :columns="columns"></table>-->
</canvas>
<script>
import axios from 'axios'
import { data as tblData, head as tblHead } from './mock.js'

export default {
    data: {
        list1: [{ name: 'dropdown-item-1', value: 'dropdown-item-1' }],
        text: 'changed after 2s',
        obj: {
            innerObj: {
                name: 'test'
            }
        },
        test: {
            a: [
                {
                    b: '123'
                }
            ]
        },
        tblData: [],
        columns: [],
        colors: [
          {color: '#f56c6c', percentage: 20},
          {color: '#e6a23c', percentage: 40},
          {color: '#5cb87a', percentage: 60},
          {color: '#1989fa', percentage: 80},
          {color: '#6f7ad3', percentage: 100}
        ],
        strokeWidth: 12,
        percentage: 66,
        tagList: ['tag-1', 'tag-2', 'tag-3'],
        colList: [
            {
                span: 3,
                tagList: ['tag1-1', 'tag1-2', 'tag1-3']
            },
            {
                span: 4,
                tagList: ['tag2-1', 'tag2-2']
            },
        ]
    },
    methods: {
        handleClick() {
            //this.list1.value.push({ name: 'dropdown-item-3', value: 'dropdown-item-3' })
            console.log(this, tblData)
        },
        async handleCommand(val) {
            const res = await axios.get('https://api.uomg.com/api/comments.163?format=json')
            console.log(res.data.data.name)
        },
        handleCheckboxGroupChange: (val) => {
            console.log(`checkbox-group changed: ${val}`)
        },
        handleRadioGroupChange(val) {
            console.log(`radio-group changed: ${val}`)
        },
        handleChangeRadioText() {
            this.obj.value.innerObj.name = 'Oops,amazing'
        },
        handleInput(val) {
            console.log(val)
        },
        handleTagClick() {
            const context = this.ctx
            console.log('tag clicked')
        },
        handleTagClose() {
            console.log('tag closed')
        }
    },
    created() {
    },
    mounted() {
        /*setTimeout(() => {
            this.text.value = 'happy yirujet'
            this.test.value.a[0].b = 321
        }, 2000)
        this.columns.value = tblHead;
        this.tblData.value = tblData;*/
        setInterval(() => {
            let percentVal = Math.floor(100 * Math.random())
            this.percentage.value = percentVal
            this.obj.value.innerObj.name = percentVal
        }, 2000)
    }
}
</script>